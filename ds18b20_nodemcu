#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClientSecure.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#include "config.h"

#define ONE_WIRE_BUS 4

OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);

const char* host = HOST;
const int httpsPort = 443;
const char fingerprint[] PROGMEM = FINGERPRINT;
const char* ssid = SSID;
const char* password = WIFIPASSWORD;

String data;
String temp;
String temp_previous;


void setup(){
  Serial.begin(115200);
  Serial.println();
  
  sensors.begin();
  
  WiFi.begin(ssid, password);
  Serial.println("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println();
  
  Serial.println(WiFi.localIP());
}
void loop(){
 sensors.requestTemperatures();
 temp_previous = temp;
 temp = sensors.getTempCByIndex(0);
 Serial.print("Temperature: ");
 Serial.print(temp);
 Serial.print(" *C  |  ");
 WiFiClientSecure client;
 Serial.printf("Using fingerprint '%s'\n", fingerprint);
 client.setFingerprint(fingerprint);

 if(WiFi.status()== WL_CONNECTED){ 
 HTTPClient https; 
 Serial.print("[HTTPS] begin...\n");
 https.begin(client, POST_URL);   
 https.addHeader("Content-Type", "application/x-www-form-urlencoded");
 https.addHeader("authorization", AUTH_TOKEN);
 Serial.print("[HTTPS] POST...\n");
 if (temp.toInt() > 0){
      data = "Temperature=" + temp + "&SensorId=esp_49a481" ;
      Serial.println("Used current Temperature");
    } else {
      temp = temp_previous;
      data = "Temperature=" + temp + "&SensorId=esp_49a481" ;
      Serial.println("Used previous temperature");
    }
    temp = String(temp);
  
    int httpCode = https.POST(data);
    if (httpCode > 0) {
      Serial.printf("[HTTPS] POST... code: %d\n", httpCode);
      String response = https.getString();
      Serial.println(httpCode);
      Serial.println(response);
      if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
        Serial.println(response);
      }
    } else {
      Serial.printf("[HTTPS] POST... failed, error: %s\n", https.errorToString(httpCode).c_str());
    }
    https.end();
  } else {
      Serial.println("Error in WiFi connection");   
  }
delay(5000);  
}
